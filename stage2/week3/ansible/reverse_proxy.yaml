- name: "Setup Reverse Proxy and SSL Certificates"
  hosts: server1
  become: yes

  tasks:

    - name: "Create directories for Nginx and Certbot in home directory"
      file:
        path: "{{ nginx_dir }}/{{ item }}"
        state: directory
        mode: "0755"
        owner: "{{ new_user }}"
        group: "{{ new_user }}"
      loop:
        - conf.d
        - letsencrypt/renewal

    - name: "Create cloudflare.ini file"
      copy:
        content: |
          dns_cloudflare_email = {{ cloudflare_email }}
          dns_cloudflare_api_key = {{ cloudflare_api }}
        dest: "{{ nginx_dir }}/letsencrypt/renewal/cloudflare.ini"
        mode: "0600"
        owner: "{{ new_user }}"
        group: "{{ new_user }}"

    - name: "Create Docker network 'monitoring' if it does not exist"
      docker_network:
        name: monitoring
        state: present

    - name: "Generate Nginx configuration files"
      copy:
        dest: "{{ nginx_dir }}/conf.d/{{ item.name }}.conf"
        mode: "0644"
        owner: "{{ new_user }}"
        group: "{{ new_user }}"
        content: |
          server {
              listen 443 ssl;
              server_name {{ item.name }}.{{ domain }};
              ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/privkey.pem;

              location / {
                  proxy_pass http://{{ item.backend }};
                  proxy_set_header Host $host;
                  proxy_set_header Origin https://$host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
      loop: "{{ subdomains }}"

    - name: "Run Certbot in a Docker container to generate SSL certificate"
      docker_container:
        name: "certbot-auto"
        image: "certbot/dns-cloudflare"
        command: "certonly --dns-cloudflare --dns-cloudflare-credentials /etc/letsencrypt/renewal/cloudflare.ini --email {{ cloudflare_email }} --agree-tos --domain '*.{{ domain }}, {{ domain }}' --non-interactive --config-dir /etc/letsencrypt --work-dir /etc/letsencrypt --logs-dir /etc/letsencrypt"
        volumes:
          - "{{ nginx_dir }}/letsencrypt:/etc/letsencrypt:rw"
        restart_policy: no
        networks:
          - name: monitoring

    - name: "Check if certs already exist"
      stat:
        path: "{{ nginx_dir }}/letsencrypt/live/{{ domain }}/fullchain.pem"
      register: file_status
      until: file_status.stat.exists
      retries: 30
      delay: 10
      changed_when: false

    - name: "Success!!!"
      debug:
        msg: "The file exists!"
      when: file_status.stat.exists

    - name: "Remove Certbot container"
      docker_container:
        name: certbot-auto
        state: absent

    - name: "Deploy Nginx container with Docker"
      docker_container:
        name: nginx-reverse-proxy
        image: nginx:latest
        restart_policy: unless-stopped
        volumes:
          - "{{ nginx_dir }}/conf.d:/etc/nginx/conf.d"
          - "{{ nginx_dir }}/letsencrypt:/etc/letsencrypt"
        ports:
          - "80:80"
          - "443:443"
        networks:
          - name: monitoring

    - name: "Reload Nginx to apply new configurations"
      command:
        cmd: "docker exec nginx-reverse-proxy nginx -s reload"
