- name: "Deploy Monitoring"
  hosts: all
  become: yes

  tasks:

    - name: "Create 'grafana' directory if it does not exist"
      ansible.builtin.file:
        path: "{{ grafana_dir }}"
        state: directory
        owner: "{{ new_user }}"
        group: "{{ new_user }}"
        mode: "0755"

    # server1 only
    - name: "Create 'prometheus.yml' file"
      ansible.builtin.copy:
        dest: "{{ prometheus_config }}"
        owner: "{{ new_user }}"
        group: "{{ new_user }}"
        mode: "0644"
        content: |
          scrape_configs:
          - job_name: {{ job_name }}
            scrape_interval: {{ scrape_interval }}
            static_configs:
            - targets:
            {% for x in targets %}
              - {{ x }}
            {% endfor %}
      when: inventory_hostname == 'server1'

    - name: "Create Docker network 'monitoring'"
      docker_network:
        name: monitoring
        state: present

    - name: "Deploy node-exporter container"
      docker_container:
        name: node-exporter
        image: prom/node-exporter:latest
        restart_policy: unless-stopped
        volumes:
          - /proc:/host/proc:ro
          - /sys:/host/sys:ro
          - /:/rootfs:ro
        command:
          - '--path.procfs=/host/proc'
          - '--path.rootfs=/rootfs'
          - '--path.sysfs=/host/sys'
          - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
        ports:
          - "9100:9100"
        networks:
          - name: monitoring

    # server1 only
    - name: "Deploy prometheus container"
      docker_container:
        name: prometheus
        image: prom/prometheus:latest
        restart_policy: unless-stopped
        volumes:
          - "{{ prometheus_config }}:/etc/prometheus/prometheus.yml"
          - prometheus_data:/prometheus
        command:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--web.enable-lifecycle'
        ports:
          - "9090:9090"
        networks:
          - name: monitoring
      when: inventory_hostname == 'server1'

    # server1 only
    - name: "Deploy grafana container"
      docker_container:
        name: grafana
        image: grafana/grafana:latest
        restart_policy: unless-stopped
        user: root
        volumes:
          - "{{ grafana_datasources }}:/etc/grafana/provisioning/datasources"
          - "{{ grafana_data }}:/var/lib/grafana"
        ports:
          - "3000:3000"
        networks:
          - name: monitoring
      when: inventory_hostname == 'server1'
